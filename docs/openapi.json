{
  "openapi": "3.0.0",
  "info": {
    "title": "PiXELL-River Financial API",
    "version": "1.0.0",
    "description": "API documentation for Employee Directory and Branch Management"
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Employee ID"
          },
          "name": {
            "type": "string",
            "description": "Employee name"
          },
          "position": {
            "type": "string",
            "description": "Employee position"
          },
          "department": {
            "type": "string",
            "description": "Employee department"
          },
          "email": {
            "type": "string",
            "description": "Employee email"
          },
          "phone": {
            "type": "string",
            "description": "Employee phone"
          },
          "branchId": {
            "type": "integer",
            "description": "Employee branch ID"
          }
        },
        "required": [
          "id",
          "name",
          "position",
          "department",
          "email",
          "phone",
          "branchId"
        ]
      },
      "EmployeeInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "branchId": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "position",
          "department",
          "email",
          "phone",
          "branchId"
        ]
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Branch ID"
          },
          "name": {
            "type": "string",
            "description": "Branch name"
          },
          "address": {
            "type": "string",
            "description": "Branch address"
          },
          "phone": {
            "type": "string",
            "description": "Branch phone"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "phone"
        ]
      },
      "BranchInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "address",
          "phone"
        ]
      }
    }
  },
  "paths": {
    "/branches": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Create a new branch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Branch created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get all branches",
        "responses": {
          "200": {
            "description": "A list of all branches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/branches/{id}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get a branch by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "put": {
        "tags": [
          "Branch"
        ],
        "summary": "Update an existing branch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Branch updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "summary": "Delete a branch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch deleted successfully"
          },
          "404": {
            "description": "Branch not found"
          }
        }
      }
    },
    "/employees": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create a new employee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all employees",
        "responses": {
          "200": {
            "description": "A list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get a single employee by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the employee",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The employee details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update an existing employee",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the employee",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an employee",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the employee",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee deleted successfully"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/employees/branch/{branchId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employees by branch ID",
        "parameters": [
          {
            "in": "path",
            "name": "branchId",
            "required": true,
            "description": "The ID of the branch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of employees for the given branch",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No employees found for this branch"
          }
        }
      }
    },
    "/employees/department/{department}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employees by department",
        "parameters": [
          {
            "in": "path",
            "name": "department",
            "required": true,
            "description": "The department name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of employees in the given department",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No employees found in this department"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Health check endpoint",
        "responses": {
          "200": {
            "description": "Server is healthy",
            "links": {
              "Documentation": {
                "description": "Link to the API documentation",
                "operationId": "getApiDocs",
                "parameters": [
                  {
                    "name": "link",
                    "in": "query",
                    "description": "API documentation link",
                    "required": true,
                    "schema": {
                      "type": "string",
                      "example": "http://localhost:3000/api-docs"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}